generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id         String    @id @default(uuid())
  username   String    @unique
  password   String
  first_name String?
  last_name  String?
  email      String?   @unique
  is_active  Boolean   @default(true)
  last_login DateTime?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  @@map("admin_users")
}

model Company {
  id                          String           @id @default(uuid())
  company_name                String
  legal_id                    String?
  employees                   Int?
  geographic_location         String?
  website                     String?
  phone                       String?
  email                       String?
  mission                     String?
  vision                      String?
  organizational_values       String?
  has_critical_mission        Boolean          @default(false)
  has_urgency                 Boolean          @default(false)
  is_manufacturer             Boolean          @default(false)
  has_distribution            Boolean          @default(false)
  has_warehouse               Boolean          @default(false)
  has_transportation          Boolean          @default(false)
  has_more_than_15_employees  Boolean          @default(false)
  has_fleet                   Boolean          @default(false)
  has_website_check           Boolean          @default(false)
  has_phone_system            Boolean          @default(false)
  is_private_company          Boolean          @default(false)
  is_regional                 Boolean          @default(false)
  is_legal_entity             Boolean          @default(false)
  has_tech_budget             Boolean          @default(false)
  buys_technology             Boolean          @default(false)
  has_identified_problems     Boolean          @default(false)
  has_competitive_interest    Boolean          @default(false)
  uses_social_media           Boolean          @default(false)
  has_economic_stability      Boolean          @default(false)
  is_expanding                Boolean          @default(false)
  wants_cost_reduction        Boolean          @default(false)
  has_geographic_location_acc Boolean          @default(false)
  has_purchase_process        Boolean          @default(false)
  niche                       String?
  services                    String?
  opportunities               String?
  budget                      String?
  authority                   String?
  buyer                       String?
  needs                       String?
  timeline                    String?
  metrics                     String?
  decision_criteria           String?
  decision_process            String?
  pain_points                 String?
  champion                    String?
  objectives                  String?
  consequences                String?
  total_score                 Int              @default(0)
  percentage                  Int              @default(0)
  evaluation_status           EvaluationStatus @default(NOT_SUITABLE)
  notes                       String?
  evaluated_by                String?
  evaluated_at                DateTime?
  created_at                  DateTime         @default(now())
  updated_at                  DateTime         @updatedAt
  leads                       Lead[]

  @@index([company_name])
  @@index([evaluation_status])
  @@index([created_at])
  @@index([evaluated_at])
  @@map("companies")
}

model Lead {
  id         String   @id @default(uuid())
  company_id String
  lead_type  LeadType
  position   String?
  name       String?
  phone      String?
  extension  String?
  email      String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  company    Company  @relation(fields: [company_id], references: [id], onDelete: Cascade)

  @@index([company_id])
  @@map("leads")
}

enum LeadType {
  direcciones
  consejo
  comite
  otros
}

enum EvaluationStatus {
  SUITABLE
  POTENTIAL
  NOT_SUITABLE
}
